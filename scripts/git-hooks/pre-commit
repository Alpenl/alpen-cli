#!/usr/bin/env bash

# Pre-commit hook: 运行静态代码检查
# 确保提交的代码符合质量标准

set -e

echo "🔍 运行 pre-commit 检查..."

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 检查是否是 Go 项目
if [ ! -f "go.mod" ]; then
    echo -e "${YELLOW}⚠️  未检测到 go.mod，跳过 Go 代码检查${NC}"
    exit 0
fi

# 获取暂存的 Go 文件
STAGED_GO_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.go$' || true)

if [ -z "$STAGED_GO_FILES" ]; then
    echo -e "${GREEN}✓ 没有 Go 文件变更，跳过检查${NC}"
    exit 0
fi

echo -e "${YELLOW}📝 检测到 Go 文件变更：${NC}"
echo "$STAGED_GO_FILES" | sed 's/^/  - /'
echo ""

# 1. 运行 go fmt
echo "1️⃣  运行 go fmt..."
FMT_FILES=$(gofmt -l $STAGED_GO_FILES 2>&1 || true)
if [ -n "$FMT_FILES" ]; then
    echo -e "${RED}✗ 以下文件需要格式化：${NC}"
    echo "$FMT_FILES" | sed 's/^/  - /'
    echo ""
    echo -e "${YELLOW}💡 自动修复：运行 'gofmt -w .' 或 'go fmt ./...'${NC}"
    exit 1
fi
echo -e "${GREEN}✓ 代码格式检查通过${NC}"
echo ""

# 2. 运行 go vet
echo "2️⃣  运行 go vet..."
if ! go vet ./... 2>&1; then
    echo -e "${RED}✗ go vet 检查失败${NC}"
    exit 1
fi
echo -e "${GREEN}✓ go vet 检查通过${NC}"
echo ""

# 3. 运行 golangci-lint（如果已安装）
if command -v golangci-lint &> /dev/null; then
    echo "3️⃣  运行 golangci-lint..."

    # 只检查暂存的文件
    LINT_FILES=$(echo "$STAGED_GO_FILES" | tr '\n' ' ')

    if ! golangci-lint run --timeout=5m $LINT_FILES 2>&1; then
        echo -e "${RED}✗ golangci-lint 检查失败${NC}"
        echo ""
        echo -e "${YELLOW}💡 提示：${NC}"
        echo "  - 修复上述问题后重新提交"
        echo "  - 如需跳过检查，使用: git commit --no-verify"
        exit 1
    fi
    echo -e "${GREEN}✓ golangci-lint 检查通过${NC}"
else
    echo -e "${YELLOW}⚠️  golangci-lint 未安装，跳过 lint 检查${NC}"
    echo -e "${YELLOW}💡 安装方法：${NC}"
    echo "  curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b \$(go env GOPATH)/bin"
fi
echo ""

# 4. 运行测试（可选，注释掉以加快提交速度）
# echo "4️⃣  运行单元测试..."
# if ! go test -short ./... 2>&1; then
#     echo -e "${RED}✗ 单元测试失败${NC}"
#     exit 1
# fi
# echo -e "${GREEN}✓ 单元测试通过${NC}"
# echo ""

echo -e "${GREEN}✅ 所有检查通过，准备提交...${NC}"
echo ""

exit 0
